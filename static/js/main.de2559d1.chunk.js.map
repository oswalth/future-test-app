{"version":3,"sources":["components/headerColumn.js","constants/constants.js","components/personComponent.js","components/searchForm.js","components/pagination.js","constants/actionTypes.js","reducers/peopleReducer.js","components/addForm.js","components/additionalInfo.js","App.js","utils.js","index.js"],"names":["HeaderColumn","headerValue","handleOrder","className","style","marginRight","charAt","toUpperCase","slice","onClick","e","target","id","peopleUrl","big","small","tableColumns","Person","person","handleActivePerson","useState","open","setOpen","prevOpen","firstName","lastName","email","phone","SearchForm","columns","search","handleSearch","searchColumn","handleSearchColumn","InputGroup","DropdownButton","as","Prepend","variant","title","map","column","Dropdown","Item","href","key","FormControl","placeholder","aria-label","aria-describedby","value","onChange","Append","Text","PeoplePagination","page","setPage","hasNextPage","adjustPage","amount","prevPage","Pagination","Prev","Ellipsis","active","Next","ACTIONS","MAKE_REQUEST","GET_DATA","ADD_PERSON","ERROR","peopleReducer","state","action","type","loading","people","SORT_PEOPLE","payload","error","newPeople","newPerson","AddForm","handleNewPersonChange","handleAddSubmit","onSubmit","htmlFor","name","disabled","Object","entries","checkInputs","AdditionalInfo","activePerson","Collapse","in","keys","length","Card","width","marginBottom","Body","Title","description","address","streetAddress","city","zip","App","data","setData","order","setOrder","React","setSearch","setSearchCoolumn","setHasNextPage","setActivePerson","addPerson","setAddPerson","setNewPerson","useReducer","dispatch","useEffect","sortedPeople","sort","property","substr","a","b","sortingRule","Math","ceil","axios","get","then","res","Container","searchVal","filterVal","console","log","display","justifyContent","alignItems","Button","prevAdd","preventDefault","floor","random","Table","filter","String","toLowerCase","indexOf","children","marginLeft","src","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de2559d1.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst HeaderColumn = ({ headerValue, handleOrder }) => {\r\n  return (\r\n    <th>\r\n      <span className=\"header-val\" style={{ marginRight: \"1rem\" }}>\r\n        {headerValue.charAt(0).toUpperCase() + headerValue.slice(1)}\r\n      </span>\r\n      <span\r\n        onClick={(e) => handleOrder(headerValue, e.target.id)}\r\n        id=\"\"\r\n        className={`order-arrow`}\r\n      >\r\n        &uarr;\r\n      </span>\r\n      <span\r\n        onClick={(e) => handleOrder(headerValue, e.target.id)}\r\n        id=\"-\"\r\n        className={`order-arrow`}\r\n      >\r\n        &darr;\r\n      </span>\r\n    </th>\r\n  );\r\n};\r\n\r\nexport default HeaderColumn;\r\n","const peopleUrl = {\r\n  big:\r\n    \"http://www.filltext.com/?&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D&rows=1000\",\r\n  small:\r\n    \"http://www.filltext.com/?&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D&rows=30\",\r\n};\r\nconst tableColumns = [\"id\", \"firstName\", \"lastName\", \"email\", \"phone\"];\r\nexport { peopleUrl, tableColumns };\r\n","import React, { useState } from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\nimport { peopleUrl } from \"../constants/constants\";\r\n\r\nconst Person = ({ person, handleActivePerson }) => {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <>\r\n      <tr\r\n        onClick={() => {\r\n          if (open) {\r\n            handleActivePerson({});\r\n          } else {\r\n            handleActivePerson(person);\r\n          }\r\n          setOpen((prevOpen) => !prevOpen);\r\n        }}\r\n      >\r\n        <td className=\"person-id\">{person.id}</td>\r\n        <td className=\"person-firstName\">{person.firstName}</td>\r\n        <td className=\"person-lastName\">{person.lastName}</td>\r\n        <td className=\"person-email\">{person.email}</td>\r\n        <td className=\"person-phone\">{person.phone}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport {\r\n  InputGroup,\r\n  FormControl,\r\n  Dropdown,\r\n  DropdownButton,\r\n} from \"react-bootstrap\";\r\n\r\nconst SearchForm = ({\r\n  columns = [],\r\n  search,\r\n  handleSearch,\r\n  searchColumn,\r\n  handleSearchColumn,\r\n}) => {\r\n  return (\r\n    <InputGroup className=\"mb-3\">\r\n      <DropdownButton\r\n        as={InputGroup.Prepend}\r\n        variant=\"outline-secondary\"\r\n        title={searchColumn}\r\n        id=\"input-group-dropdown-1\"\r\n      >\r\n        {columns.map((column) => {\r\n          return (\r\n            <Dropdown.Item\r\n              onClick={(e) => {\r\n                handleSearchColumn(column);\r\n              }}\r\n              href=\"#\"\r\n              key={column}\r\n            >\r\n              {column}\r\n            </Dropdown.Item>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n      <FormControl\r\n        placeholder=\"\"\r\n        aria-label=\"Recipient's username\"\r\n        aria-describedby=\"basic-addon2\"\r\n        value={search}\r\n        onChange={(e) => handleSearch(e.target.value)}\r\n      />\r\n\r\n      <InputGroup.Append>\r\n        <InputGroup.Text\r\n          onClick={(e) => handleSearch(e.target.value)}\r\n          id=\"basic-addon2\"\r\n        >\r\n          Search\r\n        </InputGroup.Text>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nconst PeoplePagination = ({ page, setPage, hasNextPage }) => {\r\n  const adjustPage = (amount) => {\r\n    setPage((prevPage) => prevPage + amount);\r\n  };\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && (\r\n        <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\r\n      )}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && (\r\n        <Pagination.Item onClick={() => adjustPage(-1)}>\r\n          {page - 1}\r\n        </Pagination.Item>\r\n      )}\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && (\r\n        <Pagination.Item onClick={() => adjustPage(1)}>\r\n          {page + 1}\r\n        </Pagination.Item>\r\n      )}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default PeoplePagination;\r\n","const ACTIONS = {\r\n  MAKE_REQUEST: \"MAKE_REQUEST\",\r\n  GET_DATA: \"GET_DATA\",\r\n  ADD_PERSON: \"ADD_PERSON\",\r\n  ERROR: \"ERROR\",\r\n};\r\n\r\nexport default ACTIONS;\r\n","import ACTIONS from \"../constants/actionTypes\";\r\n\r\nconst peopleReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return { loading: true, people: [] };\r\n    case ACTIONS.GET_DATA:\r\n      return { ...state, loading: false, people: action.payload.people };\r\n    case ACTIONS.SORT_PEOPLE:\r\n      return { ...state, loading: false, people: action.payload.people };\r\n    case ACTIONS.ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        people: [],\r\n      };\r\n    case ACTIONS.ADD_PERSON:\r\n      const newPeople = [action.payload.newPerson, ...state.people];\r\n      return { ...state, people: newPeople };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default peopleReducer;\r\n","import React from \"react\";\r\n\r\nconst AddForm = ({ newPerson, handleNewPersonChange, handleAddSubmit }) => {\r\n  const checkInputs = () => {\r\n    for (const [key, value] of Object.entries(newPerson)) {\r\n      if (!value) {\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"form-wrap\">\r\n      <form onSubmit={handleAddSubmit}>\r\n        <ul className=\"form-container\">\r\n          <li>\r\n            <h2>Add person</h2>\r\n          </li>\r\n\r\n          <li>\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              value={newPerson.firstName}\r\n              onChange={handleNewPersonChange}\r\n            />\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              value={newPerson.lastName}\r\n              onChange={handleNewPersonChange}\r\n            />\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              value={newPerson.email}\r\n              onChange={handleNewPersonChange}\r\n            />\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"phone\">Phone</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"phone\"\r\n              id=\"phone\"\r\n              value={newPerson.phone}\r\n              onChange={handleNewPersonChange}\r\n            />\r\n          </li>\r\n          <li>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button primary\"\r\n              disabled={checkInputs()}\r\n            >\r\n              Add person\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React from \"react\";\r\nimport { Collapse, Card } from \"react-bootstrap\";\r\n\r\nconst AdditionalInfo = ({ activePerson }) => {\r\n  return (\r\n    <Collapse in={Object.keys(activePerson).length !== 0}>\r\n      {activePerson.firstName ? (\r\n        <Card style={{ width: \"100%\", marginBottom: \"2.1rem\" }}>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              Выбран пользователь:{\" \"}\r\n              <b>{activePerson.firstName + activePerson.lastName}</b>\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <textarea style={{ width: \"100%\" }}>\r\n                {activePerson.description}\r\n              </textarea>\r\n            </Card.Text>\r\n            <Card.Text>\r\n              Адрес проживания: <b>{activePerson.address.streetAddress}</b>\r\n            </Card.Text>\r\n            <Card.Text>\r\n              Город: <b>{activePerson.address.city}</b>\r\n            </Card.Text>\r\n            <Card.Text>\r\n              Провинция/штат: <b>{activePerson.address.state}</b>\r\n            </Card.Text>\r\n            <Card.Text>\r\n              Индекс: <b>{activePerson.address.zip}</b>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default AdditionalInfo;\r\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport \"./App.css\";\nimport { Table, Container, Button } from \"react-bootstrap\";\nimport HeaderColumn from \"./components/headerColumn\";\nimport Person from \"./components/personComponent\";\nimport SearchForm from \"./components/searchForm\";\nimport PeoplePagination from \"./components/pagination\";\nimport axios from \"axios\";\nimport ACTIONS from \"./constants/actionTypes\";\nimport { peopleUrl, tableColumns } from \"./constants/constants\";\nimport { sortingRule } from \"./utils\";\nimport peopleReducer from \"./reducers/peopleReducer\";\nimport AddForm from \"./components/addForm\";\nimport AdditionalInfo from \"./components/additionalInfo\";\n\nconst App = () => {\n  const [data, setData] = useState(\"\");\n  const [order, setOrder] = useState(\"\");\n  const [search, setSearch] = React.useState(\"\");\n  const [searchColumn, setSearchCoolumn] = useState(\"firstName\");\n  const [page, setPage] = useState(1);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [activePerson, setActivePerson] = useState({});\n  const [addPerson, setAddPerson] = useState(false);\n  const [newPerson, setNewPerson] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const [state, dispatch] = useReducer(peopleReducer, {\n    loading: true,\n    people: [],\n  });\n\n  const handleOrder = (headerValue, order) => {\n    setOrder(order + headerValue);\n  };\n\n  const handleSearch = (searchVal) => {\n    setSearch(searchVal);\n  };\n\n  const handleSearchColumn = (filterVal) => {\n    console.log(filterVal);\n    setSearchCoolumn(filterVal);\n  };\n\n  const handleActivePerson = (person) => {\n    setActivePerson(person);\n  };\n\n  const handleAddSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: ACTIONS.ADD_PERSON,\n      payload: {\n        newPerson: { id: Math.floor(Math.random() * 1500), ...newPerson },\n      },\n    });\n    setAddPerson((prevAdd) => !prevAdd);\n  };\n\n  const handleNewPersonChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setNewPerson({ ...newPerson, [name]: value });\n  };\n\n  const handleDatasetSubmit = (e) => {\n    e.preventDefault();\n    console.log(e.target.children[0].children);\n  };\n\n  useEffect(() => {\n    const sortedPeople = [...state.people].sort(sortingRule(order));\n    dispatch({ type: ACTIONS.SORT_PEOPLE, payload: { people: sortedPeople } });\n  }, [order]);\n\n  useEffect(() => {\n    setHasNextPage(page < Math.ceil(state.people.length / 50));\n  }, [state.people, page]);\n\n  useEffect(() => {\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\n    axios.get(peopleUrl[data]).then((res) => {\n      // setPeople(res.data);\n      dispatch({ type: ACTIONS.GET_DATA, payload: { people: res.data } });\n    });\n  }, [data]);\n\n  return (\n    <Container className=\"my-4\">\n      <SearchForm\n        columns={tableColumns}\n        search={search}\n        searchColumn={searchColumn}\n        handleSearch={handleSearch}\n        handleSearchColumn={handleSearchColumn}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <PeoplePagination\n          page={page}\n          setPage={setPage}\n          hasNextPage={hasNextPage}\n        />\n        <Button onClick={() => setAddPerson((prevAdd) => !prevAdd)}>+</Button>\n      </div>\n      {addPerson ? (\n        <AddForm\n          newPerson={newPerson}\n          handleAddSubmit={handleAddSubmit}\n          handleNewPersonChange={handleNewPersonChange}\n        />\n      ) : null}\n      {data ? (\n        <Table>\n          <thead>\n            <tr>\n              {tableColumns.map((column) => {\n                return (\n                  <HeaderColumn\n                    key={column}\n                    headerValue={column}\n                    handleOrder={handleOrder}\n                  />\n                );\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {state.people\n              .filter((person) => {\n                if (\n                  String(person[searchColumn])\n                    .toLowerCase()\n                    .indexOf(search.toLowerCase(), 0) !== -1\n                ) {\n                  return person;\n                }\n              })\n              .map((person) => {\n                return (\n                  <Person\n                    key={person.phone}\n                    person={person}\n                    activePerson={activePerson}\n                    handleActivePerson={handleActivePerson}\n                  />\n                );\n              })\n              .slice((page - 1) * 50, page * 50)}\n          </tbody>\n        </Table>\n      ) : (\n        <div className=\"form-wrap\">\n          <form onSubmit={handleDatasetSubmit}>\n            <ul className=\"form-container\">\n              <li>\n                <h2>Choose dataset</h2>\n              </li>\n              <li>\n                <label htmlFor=\"dataChoice1\">Small dataset</label>\n                <input\n                  type=\"radio\"\n                  id=\"dataChoice1\"\n                  name=\"data\"\n                  value=\"small\"\n                  onChange={(e) => setData(e.target.value)}\n                />\n              </li>\n              <li>\n                <label htmlFor=\"dataChoice2\">Big dataset</label>\n                <input\n                  type=\"radio\"\n                  id=\"dataChoice2\"\n                  name=\"data\"\n                  value=\"big\"\n                  onChange={(e) => setData(e.target.value)}\n                />\n              </li>\n            </ul>\n          </form>\n        </div>\n      )}\n      {state.loading && (\n        <img\n          style={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            display: \"block\",\n            width: \"50%\",\n          }}\n          src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\"\n        />\n      )}\n      <AdditionalInfo activePerson={activePerson} />\n      <PeoplePagination\n        page={page}\n        setPage={setPage}\n        hasNextPage={hasNextPage}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n","const sortingRule = (property) => {\r\n  let order = 1;\r\n\r\n  if (property[0] === \"-\") {\r\n    order = -1;\r\n    property = property.substr(1);\r\n  }\r\n  return (a, b) => {\r\n    var result =\r\n      a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\r\n    return result * order;\r\n  };\r\n};\r\n\r\nexport { sortingRule };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}